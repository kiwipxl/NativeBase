{"version":3,"sources":["../../../src/basic/Button.js"],"names":["Button","borderedBtn","borderWidth","props","bordered","undefined","borderRadius","rounded","borderRadiusLarge","defaultProps","style","getInitialStyle","children","OS","Children","map","child","type","cloneElement","uppercase","androidRipple","prepareRootProps","_root","c","activeOpacity","onPress","androidRippleColor","Ripple","propTypes","oneOfType","object","number","array","block","bool","primary","transparent","success","danger","warning","info","disabled","large","small","active","StyledButton"],"mappings":"y1BAAA,4B;AACA,qC;AACA;AACA;AACA,uD;AACA;AACA,mD;;AAEA,mE;;AAEMA,M;AACa;AACjB,MAAO;AACNC,YAAa;AACZC,YAAa,KAAKC,KAAL,CAAWC,QAAX,CAAsB,CAAtB,CAA0BC,SAD3B;AAEZC,aAAc,KAAKH,KAAL,CAAWI,OAAX,EAAsB,KAAKJ,KAAL,CAAWC,QAAjC,CAA4C,mBAAUI,iBAAtD,CAA0E,CAF5E,CADP,CAAP;;;AAMA,C;;;;AAIkB;AAClB,GAAMC,cAAe;AACpBC,MAAO,KAAKC,eAAL,GAAuBV,WADV,CAArB;;;AAIA,MAAO,2BAAa,KAAKE,KAAlB,CAAyBM,YAAzB,CAAP;AACA,C;AACQ;AACR,GAAMG;AACL,sBAASC,EAAT,GAAgB,KAAhB;AACG,KAAKV,KAAL,CAAWS,QADd;AAEG,gBAAME,QAAN,CAAeC,GAAf;AACA,KAAKZ,KAAL,CAAWS,QADX;AAEA;AACCI,OAASA,MAAMC,IAAN,aAAT;AACG,gBAAMC,YAAN,CAAmBF,KAAnB,WAA4BG,UAAW,IAAvC,EAAgDH,MAAMb,KAAtD,EADH;AAEGa,KAHJ,GAFA,CAHJ;;AAUA,GAAI,sBAASH,EAAT,GAAgB,KAAhB,EAAyB,mBAAUO,aAAV,GAA4B,KAArD,EAA8D,sBAAS,SAAT,GAAuB,EAAzF,CAA6F;AAC5F;AACC;AACK,KAAKC,gBAAL,EADL;AAEC,IAAK,sBAAM,QAAKC,KAAL,CAAaC,CAAnB,EAFN;AAGC,cAAe,KAAKpB,KAAL,CAAWqB,aAAX,CAA2B,CAA3B,CAA+B,KAAKrB,KAAL,CAAWqB,aAA1C,CAA0D,GAH1E;;AAKEZ,QALF,CADD;;;AASA,CAVD,IAUO;AACN;AACC;AACC,IAAK,sBAAM,QAAKU,KAAL,CAAaC,CAAnB,EADN;AAEC,QAAS,KAAKpB,KAAL,CAAWsB,OAFrB;AAGC;AACC,KAAKtB,KAAL,CAAWuB,kBAAX;AACG,qCAAwBC,MAAxB,CAA+B,KAAKxB,KAAL,CAAWuB,kBAA1C,CADH;AAEG,qCAAwBC,MAAxB,CAA+B,mBAAUD,kBAAzC,CANL;;AAQK,KAAKL,gBAAL,EARL;;AAUC,4DAAU,KAAKA,gBAAL,EAAV;AACET,QADF,CAVD,CADD;;;;AAgBA;AACD,C;;;AAGFZ,OAAO4B,SAAP;AACI,8BAAiBA,SADrB;AAEClB,MAAO,oBAAUmB,SAAV,CAAoB,CAAC,oBAAUC,MAAX,CAAmB,oBAAUC,MAA7B,CAAqC,oBAAUC,KAA/C,CAApB,CAFR;AAGCC,MAAO,oBAAUC,IAHlB;AAICC,QAAS,oBAAUD,IAJpB;AAKCE,YAAa,oBAAUF,IALxB;AAMCG,QAAS,oBAAUH,IANpB;AAOCI,OAAQ,oBAAUJ,IAPnB;AAQCK,QAAS,oBAAUL,IARpB;AASCM,KAAM,oBAAUN,IATjB;AAUC9B,SAAU,oBAAU8B,IAVrB;AAWCO,SAAU,oBAAUP,IAXrB;AAYC3B,QAAS,oBAAU2B,IAZpB;AAaCQ,MAAO,oBAAUR,IAblB;AAcCS,MAAO,oBAAUT,IAdlB;AAeCU,OAAQ,oBAAUV,IAfnB;;;AAkBA,GAAMW,cAAe,yCAAa,mBAAb,CAAkC,EAAlC,iCAA4D7C,MAA5D,CAArB,C;AACyBA,M,CAAhB6C,Y","file":"Button.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { TouchableOpacity, Platform, View, TouchableNativeFeedback } from \"react-native\";\r\nimport { connectStyle } from \"native-base-shoutem-theme\";\r\nimport variables from \"./../theme/variables/platform\";\r\nimport { Text } from \"./Text\";\r\nimport computeProps from \"../Utils/computeProps\";\r\n\r\nimport mapPropsToStyleNames from \"../Utils/mapPropsToStyleNames\";\r\n\r\nclass Button extends Component {\r\n\tgetInitialStyle() {\r\n\t\treturn {\r\n\t\t\tborderedBtn: {\r\n\t\t\t\tborderWidth: this.props.bordered ? 1 : undefined,\r\n\t\t\t\tborderRadius: this.props.rounded && this.props.bordered ? variables.borderRadiusLarge : 2,\r\n\t\t\t},\r\n\t\t};\r\n\t}\r\n\r\n\t_root: React$Element<TouchableOpacity | TouchableNativeFeedback>;\r\n\r\n\tprepareRootProps() {\r\n\t\tconst defaultProps = {\r\n\t\t\tstyle: this.getInitialStyle().borderedBtn,\r\n\t\t};\r\n\r\n\t\treturn computeProps(this.props, defaultProps);\r\n\t}\r\n\trender() {\r\n\t\tconst children =\r\n\t\t\tPlatform.OS === \"ios\"\r\n\t\t\t\t? this.props.children\r\n\t\t\t\t: React.Children.map(\r\n\t\t\t\t\t\tthis.props.children,\r\n\t\t\t\t\t\tchild =>\r\n\t\t\t\t\t\t\tchild && child.type === Text\r\n\t\t\t\t\t\t\t\t? React.cloneElement(child, { uppercase: true, ...child.props })\r\n\t\t\t\t\t\t\t\t: child\r\n\t\t\t\t\t);\r\n\t\tif (Platform.OS === \"ios\" || variables.androidRipple === false || Platform[\"Version\"] <= 21) {\r\n\t\t\treturn (\r\n\t\t\t\t<TouchableOpacity\r\n\t\t\t\t\t{...this.prepareRootProps()}\r\n\t\t\t\t\tref={c => (this._root = c)}\r\n\t\t\t\t\tactiveOpacity={this.props.activeOpacity > 0 ? this.props.activeOpacity : 0.5}\r\n\t\t\t\t>\r\n\t\t\t\t\t{children}\r\n\t\t\t\t</TouchableOpacity>\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn (\r\n\t\t\t\t<TouchableNativeFeedback\r\n\t\t\t\t\tref={c => (this._root = c)}\r\n\t\t\t\t\tonPress={this.props.onPress}\r\n\t\t\t\t\tbackground={\r\n\t\t\t\t\t\tthis.props.androidRippleColor\r\n\t\t\t\t\t\t\t? TouchableNativeFeedback.Ripple(this.props.androidRippleColor)\r\n\t\t\t\t\t\t\t: TouchableNativeFeedback.Ripple(variables.androidRippleColor)\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{...this.prepareRootProps()}\r\n\t\t\t\t>\r\n\t\t\t\t\t<View {...this.prepareRootProps()}>\r\n\t\t\t\t\t\t{children}\r\n\t\t\t\t\t</View>\r\n\t\t\t\t</TouchableNativeFeedback>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nButton.propTypes = {\r\n\t...TouchableOpacity.propTypes,\r\n\tstyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\r\n\tblock: PropTypes.bool,\r\n\tprimary: PropTypes.bool,\r\n\ttransparent: PropTypes.bool,\r\n\tsuccess: PropTypes.bool,\r\n\tdanger: PropTypes.bool,\r\n\twarning: PropTypes.bool,\r\n\tinfo: PropTypes.bool,\r\n\tbordered: PropTypes.bool,\r\n\tdisabled: PropTypes.bool,\r\n\trounded: PropTypes.bool,\r\n\tlarge: PropTypes.bool,\r\n\tsmall: PropTypes.bool,\r\n\tactive: PropTypes.bool,\r\n};\r\n\r\nconst StyledButton = connectStyle(\"NativeBase.Button\", {}, mapPropsToStyleNames)(Button);\r\nexport { StyledButton as Button };\r\n"]}